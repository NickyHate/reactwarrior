{"version":3,"sources":["components/movieitem.js","components/movieTabs.jsx","components/pagination.js","App.js","utils/api.js","index.js"],"names":["MovieItem","state","willWatch","className","src","this","props","movie","backdrop_path","poster_path","alt","title","vote_average","type","onClick","removeMovie","bind","setState","removeMovieFromWillWatch","addMovieToWillWatch","React","Component","MovieTabs","sort_by","updateSortBy","handleClick","value","classes","sort","classNames","active","Pagination","currentPage","totalPages","changeCurrentPage","renderPageNumbers","Array","from","x","index","map","setClassName","key","aria-label","href","aria-hidden","App","getMovies","fetch","then","response","json","data","movies","results","total_pages","console","log","updateMovies","filter","item","id","updateMoviesWillWatch","moviesWillWatch","prevProps","prevState","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0647bf31.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass MovieItem extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      willWatch: false,\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <img\r\n          className=\"card-img-top\"\r\n          src={`https://image.tmdb.org/t/p/w500${\r\n            this.props.movie.backdrop_path || this.props.movie.poster_path\r\n          }`}\r\n          alt=\"\"\r\n        />\r\n        <div className=\"card-body\">\r\n          <h6 className=\"card-title\">{this.props.movie.title}</h6>\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <p className=\"mb-3\">Rating: {this.props.movie.vote_average}</p>\r\n          </div>\r\n          <div className=\"btn-container\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={this.props.removeMovie.bind(null, this.props.movie)}\r\n            className=\"btn-delete\"\r\n          >\r\n            Delete movie\r\n          </button>\r\n          {this.state.willWatch ? (\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success\"\r\n              onClick={() => {\r\n                this.setState({\r\n                  willWatch: false,\r\n                });\r\n                this.props.removeMovieFromWillWatch(this.props.movie);\r\n              }}\r\n            >\r\n              Remove Will Watch\r\n            </button>\r\n          ) : (\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              onClick={() => {\r\n                this.setState({\r\n                  willWatch: true,\r\n                });\r\n                this.props.addMovieToWillWatch(this.props.movie);\r\n              }}\r\n            >\r\n              Add Will Watch\r\n            </button>\r\n          )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieItem;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nconst MovieTabs = (props) => {\r\n  const { sort_by, updateSortBy } = props;\r\n  const handleClick = (value) => () => {\r\n    updateSortBy(value);\r\n  };\r\n  let classes = sort => classNames(\"nav-link\", {\r\n      active: sort_by === sort\r\n  })\r\n\r\n  return (\r\n    <ul className=\"tabs nav nav-pills\">\r\n      <li className=\"nav-item\">\r\n        <div\r\n          className={classes(\"popularity.desc\")}\r\n          onClick={handleClick(\"popularity.desc\")}\r\n        >\r\n          Popularity\r\n        </div>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <div\r\n          className={classes(\"revenue.desc\")}\r\n          onClick={handleClick(\"revenue.desc\")}\r\n        >\r\n          Revenue desc\r\n        </div>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <div\r\n          className={classes(\"vote_average.desc\")}\r\n          onClick={handleClick(\"vote_average.desc\")}\r\n        >\r\n          Vote average desc\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\nexport default MovieTabs;\r\n","import React from \"react\";\r\n\r\nconst Pagination = (props) => {\r\n  const { currentPage, totalPages, changeCurrentPage } = props;\r\n  const pageNumbers = Array.from(Array(totalPages), (x, index) => index + 1);\r\n  const renderPageNumbers = pageNumbers.map((value) => {\r\n    const setClassName = `${currentPage === value ? \"active\" : \"\"}`;\r\n    if (\r\n      value === 1 ||\r\n      value === totalPages ||\r\n      (value >= currentPage - 1 && value <= currentPage + 2)\r\n    ) {\r\n      return (\r\n        <li\r\n          key={value}\r\n          className={`page-link ${setClassName}`}\r\n                    onClick={() => changeCurrentPage(value)}\r\n        >\r\n          {value}\r\n        </li>\r\n      );\r\n    }\r\n  });\r\n  return (\r\n    <nav aria-label=\"Page navigation example \">\r\n      <ul className=\"pagination justify-content-center\">\r\n        <li\r\n          className=\"page-item\"\r\n          onClick={() => changeCurrentPage(currentPage - 1)}\r\n        >\r\n          <a className=\"page-link\" href=\"#!\" aria-label=\"Previous\">\r\n            <span aria-hidden=\"true\">&laquo;</span>\r\n            <span className=\"sr-only\">Previous</span>\r\n          </a>\r\n        </li>\r\n        {renderPageNumbers}\r\n        <li\r\n          className=\"page-item\"\r\n          onClick={() => changeCurrentPage(currentPage + 1)}\r\n        >\r\n          <a className=\"page-link\" href=\"#!\" aria-label=\"Next\">\r\n            <span aria-hidden=\"true\">&raquo;</span>\r\n            <span className=\"sr-only\">Next</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\nimport MovieItem from \"./components/movieitem\";\nimport MovieTabs from \"./components/movieTabs\";\nimport Pagination from \"./components/pagination\";\nimport { API_URL, API_KEY_3 } from \"./utils/api\";\nimport \"./App.css\";\n\nclass App extends React.Component{\n  constructor() {\n    super();\n\n    this.state = {\n      movies: [],\n      moviesWillWatch: [],\n      sort_by: \"popularity.desc\",\n      currentPage: 1,\n      totalPages: 0,\n    };\n  }\n  componentDidMount() {\n    this.getMovies();\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevState.sort_by !== this.state.sort_by ||\n      prevState.currentPage !== this.state.currentPage\n    ) {\n      this.getMovies();\n    }\n  }\n  getMovies = () => {\n    fetch(\n      `${API_URL}/discover/movie?api_key=${API_KEY_3}&sort_by=${this.state.sort_by}&page=${this.state.currentPage}`\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        this.setState({\n          movies: data.results,\n          totalPages: data.total_pages,\n        });\n        console.log(data);\n        \n      });\n  };\n  removeMovie = (movie) => {\n    const updateMovies = this.state.movies.filter((item) => {\n      return item.id !== movie.id;\n    });\n    this.setState({\n      movies: updateMovies,\n    });\n  };\n  addMovieToWillWatch = (movie) => {\n    const updateMoviesWillWatch = [...this.state.moviesWillWatch, movie];\n    this.setState({\n      moviesWillWatch: updateMoviesWillWatch,\n    });\n  };\n  removeMovieFromWillWatch = (movie) => {\n    const updateMoviesWillWatch = this.state.moviesWillWatch.filter((item) => {\n      return item.id !== movie.id;\n    });\n    this.setState({\n      moviesWillWatch: updateMoviesWillWatch,\n    });\n  };\n  updateSortBy = (value) => {\n    this.setState({\n      sort_by: value,\n      currentPage: 1\n    });\n  };\n  changeCurrentPage = value => {\n    if(value > 0) {\n      this.setState({\n        currentPage: value\n      })\n    }\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-9 col-12\">\n            <div className=\"row\">\n              <div className=\"col-lg-12 col/div>-12 mb-4\">\n                <MovieTabs\n                  sort_by={this.state.sort_by}\n                  updateSortBy={this.updateSortBy}\n                />\n              </div>\n            </div>\n            <div className=\"row align-items-center\">\n              {this.state.movies.map((movie) => {\n                return (\n                  <div className=\"col-lg-6 col-12 mb-4\" key={movie.id}>\n                    <MovieItem\n                      movie={movie}\n                      removeMovie={this.removeMovie}\n                      addMovieToWillWatch={this.addMovieToWillWatch}\n                      removeMovieFromWillWatch={this.removeMovieFromWillWatch}\n                    />\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <div className=\"col-lg-3 col-12\">\n            <p>Will watch: {this.state.moviesWillWatch.length}</p>\n          </div>\n        </div>\n        <div className=\"row justify-content-center\">\n          <div className=\"col-lg-12 col-12 justify-content-center\">\n            <Pagination \n              currentPage={this.state.currentPage}\n              totalPages={this.state.totalPages}\n              changeCurrentPage={this.changeCurrentPage}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export const API_URL = \"https://api.themoviedb.org/3\";\r\n\r\nexport const API_KEY_3 = \"3f4ca4f3a9750da53450646ced312397\";","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}